<?xml version="1.0" encoding="ISO-8859-1" ?>
<package>
  <name>XML_CSSML</name>
  <summary>The PEAR::XML_CSSML package provides methods for creating cascading style sheets (CSS) from an XML standard called CSSML.</summary>
  <maintainer>
    <user>dallen</user>
    <name>Daniel Allen</name>
    <email>dallen@php.net</email>
  </maintainer>
  <release>
    <version>0.1</version>
    <state>beta</state>
    <date>2002-04-29</date>
    <notes>
      This is the initial independent release of the XML_CSSML package.  It includes support for both the domxml_xslt functions and the sablotron xslt extension.  The main file includes a factory function, which calls the relevant container object depending on the extension the user wishes to use.  It can either create an output css file or it can return the string.  It has support for browser specific styles using the codes of Net_UserAgent_Detect as well as a filter to extract only applicable styles.  There is an example file in the docs/ to better understand the usage.
    </notes>
  </release>
  <release>
    <version>1.0</version>
    <state>stable</state>
    <date>2002-05-20</date>
    <notes>
      This is the first stable release of the XML_CSSML package.  The hopes of this package are to erase the awkwardness of having to create many stylesheets for many pages and sections of a site, and having to infiltrate it with language constructions.  One can think of CSSML as being a template for CSS documents, in fact that is the best description it has been given so far. 
    </notes>
  </release>
  <filelist>
    <dir name="/" baseinstalldir="XML_CSSML">
        <file role="php">CSSML.php</file>
        <dir name="CSSML">
            <file role="php">error.php</file>
        </dir>
        <dir name="Container">
            <file role="php">libxslt.php</file>
            <file role="xsl">libxslt.xsl</file>
            <file role="php">xslt.php</file>
            <file role="xsl">xslt.xsl</file>
        </dir>
        <dir name="docs">
            <file role="xml">CSSML.xml</file>
            <file role="php">example.php</file>
        </dir>
    </dir>
  </filelist>
</package>
